trigger:
- master

variables:
  teamName: dotnet-core
  SkipTests: true #TODO set to false
  RestoreSource: 
  IsStable: false
  VersionStamp:
  PackageVersionPropsUrl:
jobs:
- template: /eng/jobs/linux-binary-build.yml
  parameters:
    agentOS: Linux
    pool:
      vmImage: 'ubuntu-16.04'
      # name: Hosted Ubuntu 1604
      # demands:
      #   - agent.os -equals Linux
    strategy:
      maxParallel: 8
      matrix: 
        # build_linux_x64_debug:
        #   AdditionalBuildArguments: "-PortableBuild=true -strip-symbols -SkipTests=$(SkipTests)"
        #   AdditionalMSBuildArguments: "/p:DotNetRestoreSources=$(RestoreSource) /p:StabilizePackageVersion=$(IsStable) /p:PackageVersionStamp=$(VersionStamp)"
        #   BuildConfiguration: Debug
        #   CrossBuildArgs: ''
        #   DockerTag: "centos-7-d485f41-20173404063424"
        #   PortableBuild: "true"
        #   TargetArchitecture: "x64"
        build_linux_x64_release:
          AdditionalBuildArguments: "-PortableBuild=true -strip-symbols -SkipTests=$(SkipTests)"
          AdditionalMSBuildArguments: "/p:DotNetRestoreSources=$(RestoreSource) /p:StabilizePackageVersion=$(IsStable) /p:PackageVersionStamp=$(VersionStamp)"
          BuildConfiguration: Release
          CrossBuildArgs: ''
          DockerTag: "centos-7-d485f41-20173404063424"
          PortableBuild: "true"
          TargetArchitecture: "x64"
        # build_rhel.6_x64_debug:
        #   AdditionalBuildArguments: "-TargetArchitecture=x64 -PortableBuild=false -strip-symbols -SkipTests=$(SkipTests)"
        #   AdditionalMSBuildArguments: "/p:OutputRid=rhel.6-x64 /p:DotNetRestoreSources=$(RestoreSource) /p:StabilizePackageVersion=$(IsStable) /p:PackageVersionStamp=$(VersionStamp)"
        #   BuildConfiguration: Debug
        #   CrossBuildArgs: ''
        #   DockerTag: "centos-6-376e1a3-20174311014331"
        #   PortableBuild: "false"
        #   TargetArchitecture: "x64"
        build_rhel.6_x64_release:
          AdditionalBuildArguments: "-TargetArchitecture=x64 -PortableBuild=false -strip-symbols -SkipTests=$(SkipTests)"
          AdditionalMSBuildArguments: "/p:OutputRid=rhel.6-x64 /p:DotNetRestoreSources=$(RestoreSource) /p:StabilizePackageVersion=$(IsStable) /p:PackageVersionStamp=$(VersionStamp)"
          BuildConfiguration: Release
          CrossBuildArgs: ''
          DockerTag: "centos-6-376e1a3-20174311014331"
          PortableBuild: "false"
          TargetArchitecture: "x64"
        # build_alpine-3.6_x64_debug:
        #   AdditionalBuildArguments: "-TargetArchitecture=x64 -PortableBuild=false -strip-symbols -SkipTests=$(SkipTests)"
        #   AdditionalMSBuildArguments: "/p:OutputRid=linux-musl-x64 /p:DotNetRestoreSources=$(RestoreSource) /p:StabilizePackageVersion=$(IsStable) /p:PackageVersionStamp=$(VersionStamp)"
        #   BuildConfiguration: Debug
        #   CrossBuildArgs: ''
        #   DockerTag: "alpine-3.6-3148f11-20171119021156"
        #   PortableBuild: false
        #   TargetArchitecture: x64
        build_alpine-3.6_x64_release:
          AdditionalBuildArguments: "-TargetArchitecture=x64 -PortableBuild=false -strip-symbols -SkipTests=$(SkipTests)"
          AdditionalMSBuildArguments: "/p:OutputRid=linux-musl-x64 /p:DotNetRestoreSources=$(RestoreSource) /p:StabilizePackageVersion=$(IsStable) /p:PackageVersionStamp=$(VersionStamp)"
          BuildConfiguration: Release
          CrossBuildArgs: ''
          DockerTag: "alpine-3.6-3148f11-20171119021156"
          PortableBuild: false
          TargetArchitecture: x64
        # build_linux_arm_debug:
        #   AdditionalBuildArguments: "-TargetArchitecture=arm -PortableBuild=true -strip-symbols -SkipTests=true -CrossBuild=true"
        #   AdditionalMSBuildArguments: "/p:DotNetRestoreSources=$(RestoreSource) /p:StabilizePackageVersion=$(IsStable) /p:PackageVersionStamp=$(VersionStamp)"
        #   BuildConfiguration: Debug
        #   CrossBuildArgs: '-e ROOTFS_DIR=/crossrootfs/arm'
        #   DockerTag: "ubuntu-14.04-cross-e435274-20180323032140"
        #   PortableBuild: true
        #   TargetArchitecture: arm
        build_linux_arm_release:
          AdditionalBuildArguments: "-TargetArchitecture=arm -PortableBuild=true -strip-symbols -SkipTests=true -CrossBuild=true"
          AdditionalMSBuildArguments: "/p:DotNetRestoreSources=$(RestoreSource) /p:StabilizePackageVersion=$(IsStable) /p:PackageVersionStamp=$(VersionStamp)"
          BuildConfiguration: Release
          CrossBuildArgs: '-e ROOTFS_DIR=/crossrootfs/arm'
          DockerTag: "ubuntu-14.04-cross-e435274-20180323032140"
          PortableBuild: true
          TargetArchitecture: arm
        # build_linux_arm64_debug:
        #   AdditionalBuildArguments: "-TargetArchitecture=arm64 -PortableBuild=true -strip-symbols -SkipTests=true -CrossBuild=true"
        #   AdditionalMSBuildArguments: "/p:DotNetRestoreSources=$(RestoreSource) /p:StabilizePackageVersion=$(IsStable) /p:PackageVersionStamp=$(VersionStamp)"
        #   BuildConfiguration: Debug
        #   CrossBuildArgs: '-e ROOTFS_DIR=/crossrootfs/arm64'
        #   DockerTag: "ubuntu-16.04-cross-arm64-a3ae44b-20180316023254"
        #   PortableBuild: true
        #   TargetArchitecture: arm64
        build_linux_arm64_release:
          AdditionalBuildArguments: "-TargetArchitecture=arm64 -PortableBuild=true -strip-symbols -SkipTests=true -CrossBuild=true"
          AdditionalMSBuildArguments: "/p:DotNetRestoreSources=$(RestoreSource) /p:StabilizePackageVersion=$(IsStable) /p:PackageVersionStamp=$(VersionStamp)"
          BuildConfiguration: Release
          CrossBuildArgs: '-e ROOTFS_DIR=/crossrootfs/arm64'
          DockerTag: "ubuntu-16.04-cross-arm64-a3ae44b-20180316023254"
          PortableBuild: true
          TargetArchitecture: arm64
    
# - template: /eng/jobs/linux-binary-build.yml
#   parameters:
#     agentOS: FreeBSD
#     pool:
#       name: DotNetCore-Infra
#       demands:
#         - agent.os -equals FreeBSD
#     strategy:
#       maxParallel: 2
#       matrix: 
#         # build_linux_freebsd_x64_debug:
#         #   AdditionalBuildArguments: "-PortableBuild=true -strip-symbols -SkipTests=$(SkipTests)"
#         #   AdditionalMSBuildArguments: "/p:DotNetRestoreSources=$(RestoreSource) /p:StabilizePackageVersion=$(IsStable) /p:PackageVersionStamp=$(VersionStamp)"
#         #   BuildConfiguration: Debug
#         #   CrossBuildArgs: ''
#         #   PortableBuild: "true"
#         #   TargetArchitecture: "x64"
#         build_linux_freebsd_x64_release:
#           AdditionalBuildArguments: "-PortableBuild=true -strip-symbols -SkipTests=$(SkipTests)"
#           AdditionalMSBuildArguments: "/p:DotNetRestoreSources=$(RestoreSource) /p:StabilizePackageVersion=$(IsStable) /p:PackageVersionStamp=$(VersionStamp)"
#           BuildConfiguration: Release
#           CrossBuildArgs: ''
#           PortableBuild: "true"
#           TargetArchitecture: "x64"
# - template: /eng/jobs/linux-package-build.yml
#   parameters:
#     pool:
#       name: DotNet-Build
#       demands:
#         - agent.os -equals linux
#     strategy:
#       maxParallel: 4
#       matrix: 
#         build_linux_debian_package_x64_debug:
#           BuildConfiguration: Debug
#           DistroRidList: ["ubuntu14.04", "ubuntu16.04","ubuntu.18.04","debian.8","debian.9"]
#           DockerTag: ubuntu-14.04-debpkg-e5cf912-20175003025046
#           PackageType: Deb
#           TargetArchitecture: "x64"
#         build_linux_debian_package_x64_release:
#           BuildConfiguration: Release
#           DistroRidList: ["ubuntu14.04", "ubuntu16.04","ubuntu.18.04","debian.8","debian.9"]
#           DockerTag: ubuntu-14.04-debpkg-e5cf912-20175003025046
#           PackageType: Deb
#           TargetArchitecture: "x64"
#         build_linux_rpm_package_x64_debug:
#           BuildConfiguration: Debug
#           DistroRidList: ["opensuse.42", "fedora.27","centos.7","sles.12","oraclelinux.7"]
#           DockerTag: rhel-7-rpmpkg-c982313-20174116044113
#           PackageType: Rpm
#           TargetArchitecture: "x64"
#         build_linux_rpm_package_x64_release:
#           BuildConfiguration: Release
#           DistroRidList: ["opensuse.42", "fedora.27","centos.7","sles.12","oraclelinux.7"]
#           DockerTag: rhel-7-rpmpkg-c982313-20174116044113
#           PackageType: Rpm
#           TargetArchitecture: "x64"
      
- template: /eng/jobs/windows-binary-build.yml
  parameters:
    pool:
      # name: DotNet-Build
      # demands:
      #   - agent.os -equals Windows_NT
      vmImage: 'vs2017-win2016'
    strategy:
      maxParallel: 4
      matrix: 
        # build_windows_x64_debug:
        #   AdditionalMSBuildArguments: "/p:SkipTests=$(SkipTests) /p:DotNetRestoreSources=$(RestoreSource) /p:StabilizePackageVersion=$(IsStable) /p:PackageVersionStamp=$(VersionStamp)"
        #   BuildConfiguration: Debug
        #   BuildFullPlatformManifest: "true"
        #   PortableBuild: "true"
        #   PublishRidAgnosticPackages: "true"
        #   TargetArchitecture: x64
        build_windows_x64_release:
          AdditionalMSBuildArguments: "/p:SkipTests=$(SkipTests) /p:DotNetRestoreSources=$(RestoreSource) /p:StabilizePackageVersion=$(IsStable) /p:PackageVersionStamp=$(VersionStamp)"
          BuildConfiguration: Release
          BuildFullPlatformManifest: "true"
          PortableBuild: "true"
          PublishRidAgnosticPackages: "true"
          TargetArchitecture: x64
        # build_windows_x86_debug:
        #   AdditionalMSBuildArguments: "/p:SkipTests=$(SkipTests) /p:DotNetRestoreSources=$(RestoreSource) /p:StabilizePackageVersion=$(IsStable) /p:PackageVersionStamp=$(VersionStamp)"
        #   BuildConfiguration: Debug
        #   PortableBuild: "true"
        #   PublishRidAgnosticPackages: "true"
        #   TargetArchitecture: x86
        build_windows_x86_release:
          AdditionalMSBuildArguments: "/p:SkipTests=$(SkipTests) /p:DotNetRestoreSources=$(RestoreSource) /p:StabilizePackageVersion=$(IsStable) /p:PackageVersionStamp=$(VersionStamp)"
          BuildConfiguration: Release
          PortableBuild: "true"
          TargetArchitecture: x86
        # build_windows_arm_debug:
        #   AdditionalMSBuildArguments: "/p:SkipTests=true /p:NativeToolSetDir=C:\\tools\\clr /p:DotNetRestoreSources=$(RestoreSource) /p:StabilizePackageVersion=$(IsStable) /p:PackageVersionStamp=$(VersionStamp)"
        #   BuildConfiguration: Debug
        #   PortableBuild: "true"
        #   TargetArchitecture: arm
        # build_windows_arm_release:
        #   AdditionalMSBuildArguments: "/p:SkipTests=true /p:NativeToolSetDir=C:\\tools\\clr /p:DotNetRestoreSources=$(RestoreSource) /p:StabilizePackageVersion=$(IsStable) /p:PackageVersionStamp=$(VersionStamp)"
        #   BuildConfiguration: Release
        #   PortableBuild: "true"
        #   TargetArchitecture: arm
        # build_windows_arm64_debug:
        #   AdditionalMSBuildArguments: "/p:SkipTests=true /p:NativeToolSetDir=C:\\tools\\clr /p:DotNetRestoreSources=$(RestoreSource) /p:StabilizePackageVersion=$(IsStable) /p:PackageVersionStamp=$(VersionStamp)"
        #   BuildConfiguration: Debug
        #   PortableBuild: "true"
        #   TargetArchitecture: arm64
        # build_windows_arm64_release:
        #   AdditionalMSBuildArguments: "/p:SkipTests=true /p:NativeToolSetDir=C:\\tools\\clr /p:DotNetRestoreSources=$(RestoreSource) /p:StabilizePackageVersion=$(IsStable) /p:PackageVersionStamp=$(VersionStamp)"
        #   BuildConfiguration: Release
        #   PortableBuild: "true"
        #   TargetArchitecture: arm64
# - template: /eng/jobs/windows-package-build.yml
#   parameters:
#     pool:
#       name: DotNet-Build
#       demands:
#         - agent.os -equals windows_nt
#     strategy:
#       maxParallel: 5
#       matrix: 
#         build_windows_x64_debug:
#           AdditionalMSBuildArguments: "/p:SkipTests=$(SkipTests) /p:DotNetRestoreSources=$(RestoreSource) /p:StabilizePackageVersion=$(IsStable) /p:PackageVersionStamp=$(VersionStamp)"
#           BuildConfiguration: Debug
#           BuildFullPlatformManifest: "true"
#           PortableBuild: "true"
#           PublishRidAgnosticPackages: "true"
#           TargetArchitecture: x64
#         build_windows_x64_release:
#           AdditionalMSBuildArguments: "/p:SkipTests=$(SkipTests) /p:DotNetRestoreSources=$(RestoreSource) /p:StabilizePackageVersion=$(IsStable) /p:PackageVersionStamp=$(VersionStamp)"
#           BuildConfiguration: Release
#           BuildFullPlatformManifest: "true"
#           PortableBuild: "true"
#           PublishRidAgnosticPackages: "true"
#           TargetArchitecture: x64
#         build_windows_x86_debug:
#           AdditionalMSBuildArguments: "/p:SkipTests=$(SkipTests) /p:DotNetRestoreSources=$(RestoreSource) /p:StabilizePackageVersion=$(IsStable) /p:PackageVersionStamp=$(VersionStamp)"
#           BuildConfiguration: Debug
#           PortableBuild: "true"
#           PublishRidAgnosticPackages: "true"
#           TargetArchitecture: x86
#         build_windows_x86_release:
#           AdditionalMSBuildArguments: "/p:SkipTests=$(SkipTests) /p:DotNetRestoreSources=$(RestoreSource) /p:StabilizePackageVersion=$(IsStable) /p:PackageVersionStamp=$(VersionStamp)"
#           BuildConfiguration: Release
#           PortableBuild: "true"
#           TargetArchitecture: x86

- template: /eng/jobs/osx-build.yml
  parameters:
    pool:
      name: Hosted macOS
      demands:
        - agent.os -equals Darwin
    strategy:
      maxParallel: 5
      matrix: 
        # build_osx_x64_debug:
        #   AdditionalBuildArguments: "-PortableBuild=true -strip-symbols -SkipTests=$(SkipTests)"
        #   AdditionalMSBuildArguments: "/p:DotNetRestoreSources=$(RestoreSource) /p:StabilizePackageVersion=$(IsStable) /p:PackageVersionStamp=$(VersionStamp)"
        #   BuildConfiguration: Debug
        #   PortableBuild: "true"
        build_osx_x64_release:
          AdditionalBuildArguments: "-PortableBuild=true -strip-symbols -SkipTests=$(SkipTests)"
          AdditionalMSBuildArguments: "/p:DotNetRestoreSources=$(RestoreSource) /p:StabilizePackageVersion=$(IsStable) /p:PackageVersionStamp=$(VersionStamp)"
          BuildConfiguration: Release
          PortableBuild: "true"
          TargetArchitecture: x64

# - template: /eng/jobs/validate-signing.yml
#   parameters:
#     pool:
#       name: Dotnet-Build
#       demands:
#         - agent.os -equals windows_nt
#     variables:
#       TargetArchitecture: x64
#       AdditionalMSBuildArguments: "/p:StabilizePackageVersion=$(IsStable) /p:PackageVersionStamp=$(VersionStamp)"
# - template: /eng/jobs/finalize-pubish.yml
#   parameters:
#     pool:
#       name: Dotnet-Build
#       demands:
#         - agent.os -equals windows_nt
#     variables:
#       TargetArchitecture: x64
#       AdditionalMSBuildArguments: "/p:StabilizePackageVersion=$(IsStable) /p:PackageVersionStamp=$(VersionStamp)"